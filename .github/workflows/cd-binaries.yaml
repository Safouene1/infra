name: cd / binaries

on:
  push:
    tags:
      - v*
  workflow_run:
    workflows:
      - ci / core
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    outputs:
      release-name: ${{ steps.release-name.outputs.release-name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: release-name
        run: |
          RELEASE_NAME=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || '$(git describe --tags)' }}
          echo "release-name=$(echo ${RELEASE_NAME#v} | sed 's/-/+/')" >>$GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true
      - run: |
          mkdir -p /opt/chocolatey
          curl -fsSL https://github.com/chocolatey/choco/releases/download/1.2.0/chocolatey.v1.2.0.tar.gz | tar xz -C /opt/chocolatey
          printf '#!/bin/sh\nmono /opt/chocolatey/choco.exe "$@"\n' >/usr/local/bin/choco
          chmod +x /usr/local/bin/choco
      - uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --snapshot=${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          RELEASE_NAME: ${{ needs.prepare.outputs.release-name }}
          GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
          GEMFURY_TOKEN: ${{ secrets.GORELEASER_GEMFURY_TOKEN }}
          CHOCOLATEY_API_KEY: ${{ secrets.GORELEASER_CHOCOLATEY_API_KEY }}
      - uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: dist/
