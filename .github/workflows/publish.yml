name: publish

on:
  workflow_call:
    inputs:
      RELEASE_NAME:
        type: string
      ENVIRONMENT:
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      RELEASES_BUCKET:
        required: true
      HELM_BUCKET:
        required: true
      GEMFURY_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
      TELEMETRY_WRITE_KEY:
        required: true

jobs:
  publish-artifacts:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - uses: actions/download-artifact@v3
        with:
          name: binaries
      - run: |
          for PACKAGE in *.deb *.rpm; do
            curl -fs -F package=@$PACKAGE https://${{ secrets.GEMFURY_TOKEN }}@push.fury.io/infrahq/
          done
        if: ${{ inputs.ENVIRONMENT == 'production' }}
      - run: aws s3 sync . s3://${{ secrets.RELEASES_BUCKET }}/infra/v${{ inputs.RELEASE_NAME }} --exclude '*' --include '*.zip' --include '*.deb' --include '*.rpm' --include 'infra-checksums.txt' --acl public-read
      - uses: actions/download-artifact@v3
        with:
          name: helm
      - run: aws s3 sync . s3://${{ secrets.HELM_BUCKET }} --exclude '*' --include 'index.yaml' --include '*.tgz' --acl public-read

  publish-docker:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - run: |
          case "${{ inputs.ENVIRONMENT }}" in
            Production) LATEST=1 ;;
            Development) DEV=1 ;;
          esac
          docker buildx build --push \
            --platform linux/amd64,linux/arm64 \
            --build-arg TELEMETRY_WRITE_KEY=${{ secrets.TELEMETRY_WRITE_KEY }} \
            --tag infrahq/infra:${{ inputs.RELEASE_NAME }} \
            ${LATEST:+--tag infrahq/infra} \
            ${DEV:+--tag infrahq/infra:dev} \
            .
