apiVersion: v1
kind: ServiceAccount
metadata:
  name: infra-serviceaccount
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: infra-clusterrole
rules:
  - apiGroups: [""]
    resources:
      - users
      - groups
    verbs:
      - impersonate
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
      - clusterrole
      - clusterrolebindings
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: infra-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: infra-serviceaccount
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: infra-clusterrole
---
apiVersion: v1
kind: Service
metadata:
  name: infra
  labels:
    app: infra
spec:
  type: LoadBalancer
  selector:
    app: infra
  ports:
    - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra
spec:
  selector:
    matchLabels:
      app: infra
  replicas: 1
  template:
    metadata:
      labels:
        app: infra
    spec:
      serviceAccountName: infra-serviceaccount
      automountServiceAccountToken: true
      containers:
        - name: server
          image: gcr.io/infra-app-development/testing:0.0.1
          imagePullPolicy: Always
          args: ["start", "--domain", "test.infrahq.com", "--db-path", "/var/run/infra"]
          ports:
            - containerPort: 443
          volumeMounts:
            - name: db
              mountPath: /var/run/infra
      volumes:
        - name: db
          emptyDir: {}

